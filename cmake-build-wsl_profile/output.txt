PACKAGE : package
 IDENT : main
 EOL : 

 FUNC : func
 IDENT : main
 BRACKET_ROUND : (
 BRACKET_ROUND : )
 BRACKET_CURLY : {
 EOL : 

 IDENT : print
 BRACKET_ROUND : (
 STRING_LIT : Zadejte cislo pro vypocet faktorialu: 
 BRACKET_ROUND : )
 EOL : 

 FLOAT : float64
 IDENT : a
 ASIGN_OPERATOR : :=
 FLOAT_LIT : 5.545454
 EOL : 

 INT : int
 IDENT : a
 COMMA : ,
 IDENT : _
 ASIGN_OPERATOR : =
 IDENT : inputi
 BRACKET_ROUND : (
 BRACKET_ROUND : )
 EOL : 

 IF : if
 IDENT : a
 COMP_OPERATOR : <
 INT_LIT : 0
 BRACKET_CURLY : {
 EOL : 

 IDENT : print
 BRACKET_ROUND : (
 STRING_LIT : Faktorial nejde spocitat!\n
 BRACKET_ROUND : )
 EOL : 

 BRACKET_CURLY : }
 ELSE : else
 BRACKET_CURLY : {
 EOL : 

 IDENT : vysl
 ASIGN_OPERATOR : :=
 INT_LIT : 1
 EOL : 

 FOR : for
 SEMICOL : ;
 IDENT : a
 COMP_OPERATOR : >
 INT_LIT : 0
 SEMICOL : ;
 IDENT : a
 ASIGN_OPERATOR : =
 IDENT : a
 ARIT_OPERATOR : -
 INT_LIT : 1
 BRACKET_CURLY : {
 EOL : 

 IDENT : vysl
 ASIGN_OPERATOR : =
 IDENT : vysl
 ARIT_OPERATOR : *
 IDENT : a
 EOL : 

 BRACKET_CURLY : }
 EOL : 

 IDENT : print
 BRACKET_ROUND : (
 STRING_LIT : Vysledek je 
 COMMA : ,
 IDENT : vysl
 COMMA : ,
 STRING_LIT : \n
 BRACKET_ROUND : )
 EOL : 

 BRACKET_CURLY : }
 EOL : 

 BRACKET_CURLY : }
 